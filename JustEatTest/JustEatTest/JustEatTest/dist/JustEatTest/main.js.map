{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,2RAA2R,yEAAyE,QAAQ,8BAA8B,UAAU,2HAA2H,QAAQ,0D;;;;;;;;;;;;;;;;;;;;;;;;;ACAre;AACP;AACuC;AAIlF,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,mBAAmB;QACpC,SAAS,EAAE,GAAG;QACd,QAAQ,EAAE,UAAU;KACrB,CAAC;CACH,CAAC;AASF;IAME,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,UAAK,GAAG,aAAa,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAS,MAAO,CAAC,MAAM,CAAC,CAAC,CAAO,MAAO,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC;IAC3E,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAU,GAAV;QACE,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAiB,GAAjB,UAAkB,QAAa;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,MAAM,GAAG,uBAAuB,GAAG,QAAQ,GAAG,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IACxH,CAAC;IAzBU,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;QACD,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAO0B,+DAAU;OANzB,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBiC;AACjB;AACe;AACT;AACF;AAc7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;AClBtB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Hello and welcome to my terrible JustEat test app!\\r\\n  </h1>\\r\\n  <input type=\\\"search\\\" placeholder=\\\"Search (start typing)\\\" [(ngModel)]=\\\"searchTerm\\\" (keyup)=\\\"searchList()\\\" />\\r\\n  <div style=\\\"border:inset; text-align:left\\\" *ngFor=\\\"let r of restaurantData\\\">\\r\\n    <p>Name: {{r.Name}}<br/></p>\\r\\n    <p>Rating: {{r.Rating}}<br/></p>\\r\\n    <p>Cuisine Types: <br /></p>\\r\\n    <div *ngFor=\\\"let c of r.CuisineTypes\\\">\\r\\n      <span>\\r\\n        {{c.Name}}\\r\\n      </span>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\nimport { restaurant } from '../models/Restaurant';\n\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Cache-control': 'no-cache,no-store', //will fix ie cache issue\r\n    'Expires': '0',\r\n    'Pragma': 'no-cache'\r\n  })\r\n};\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n@Injectable({\r\n  providedIn: 'root'\r\n})\nexport class AppComponent implements OnInit {\n  private apiUrl: any;\n  public searchTerm: any;\n\n  public restaurantData: restaurant[];\n  title = 'JustEatTest';\n  constructor(private http: HttpClient) {\r\n    this.apiUrl = (<any>window).apiUrl ? (<any>window).apiUrl : '/api/main/';\r\n  }\n\n  ngOnInit() {\n    var __this = this;\n    this.GetRestaurantData(\"se19\").subscribe(data => {\r\n      __this.restaurantData = data;\r\n    });\r\n  }\n\n  searchList() {\n    var __this = this;\n    this.GetRestaurantData(this.searchTerm).subscribe(data => {\r\n      __this.restaurantData = data;\r\n    });\r\n  }\n  GetRestaurantData(areaCode: any): Observable<restaurant[]> {\r\n    return this.http.get<restaurant[]>(this.apiUrl + 'Restaurants?areaCode=' + areaCode + '&tsp=' + new Date().getTime());\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}